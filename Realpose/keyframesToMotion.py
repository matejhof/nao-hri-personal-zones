#!/usr/bin/env python2
# -*- coding: utf-8 -*-
# Author: Adam Rojik

moves = {}

names = list()
times = list()
keys = list()

names.append("LElbowRoll")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[-1.26858, [3, -0.0133333, 0], [3, 0.08, 0]], [-1.54462, [3, -0.08, 0], [3, 0.106667, 0]], [-0.315962, [3, -0.106667, 0], [3, 0.133333, 0]], [-0.315962, [3, -0.133333, 0], [3, 0.16, 0]], [-0.677986, [3, -0.16, 0], [3, 0.133333, 0]], [-0.208582, [3, -0.133333, -0.0931999], [3, 0.173333, 0.12116]], [-0.0349066, [3, -0.173333, 0], [3, 0.2, 0]], [-0.248466, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[-0.794654, [3, -0.0133333, 0], [3, 0.08, 0]], [0.08126, [3, -0.08, 0], [3, 0.106667, 0]], [-0.090548, [3, -0.106667, 0.171808], [3, 0.133333, -0.21476]], [-1.54018, [3, -0.133333, 0.302152], [3, 0.16, -0.362582]], [-2.08475, [3, -0.16, 0], [3, 0.133333, 0]], [-2.08475, [3, -0.133333, 0], [3, 0.173333, 0]], [-2.08475, [3, -0.173333, 0], [3, 0.2, 0]], [-2.08567, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.3024, [3, -0.0133333, 0], [3, 0.08, 0]], [0.3024, [3, -0.08, 0], [3, 0.106667, 0]], [0.3024, [3, -0.106667, 0], [3, 0.133333, 0]], [0.3024, [3, -0.133333, 0], [3, 0.16, 0]], [0.3024, [3, -0.16, 0], [3, 0.133333, 0]], [0.3024, [3, -0.133333, 0], [3, 0.173333, 0]], [0.3024, [3, -0.173333, 0], [3, 0.2, 0]], [0.3024, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[-1.09532, [3, -0.0133333, 0], [3, 0.08, 0]], [-1.09532, [3, -0.08, 0], [3, 0.106667, 0]], [-0.193326, [3, -0.106667, -0.316799], [3, 0.133333, 0.395999]], [1.04308, [3, -0.133333, -0.0102268], [3, 0.16, 0.0122721]], [1.05535, [3, -0.16, -0.0122721], [3, 0.133333, 0.0102268]], [1.3913, [3, -0.133333, -0.144507], [3, 0.173333, 0.187859]], [2.05245, [3, -0.173333, 0], [3, 0.2, 0]], [1.72571, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.47243, [3, -0.0133333, 0], [3, 0.08, 0]], [1.2517, [3, -0.08, 0], [3, 0.106667, 0]], [0.162562, [3, -0.106667, 0], [3, 0.133333, 0]], [0.889678, [3, -0.133333, 0], [3, 0.16, 0]], [-0.104354, [3, -0.16, 0], [3, 0.133333, 0]], [0.167164, [3, -0.133333, 0], [3, 0.173333, 0]], [0.032172, [3, -0.173333, 0], [3, 0.2, 0]], [0.400332, [3, -0.2, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[-0.47098, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.841249, [3, -0.08, 0], [3, 0.106667, 0]], [-0.673468, [3, -0.106667, -0.125078], [3, 0.133333, 0.156347]], [0.00302601, [3, -0.133333, -0.271472], [3, 0.16, 0.325766]], [1.11824, [3, -0.16, 0], [3, 0.133333, 0]], [0.524586, [3, -0.133333, 0.11405], [3, 0.173333, -0.148264]], [0.331302, [3, -0.173333, 0.0401214], [3, 0.2, -0.0462939]], [0.26534, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.130432, [3, -0.0133333, 0], [3, 0.08, 0]], [0.130432, [3, -0.08, 0], [3, 0.106667, 0]], [0.130432, [3, -0.106667, 0], [3, 0.133333, 0]], [0.130432, [3, -0.133333, 0], [3, 0.16, 0]], [0.130432, [3, -0.16, 0], [3, 0.133333, 0]], [0.130432, [3, -0.133333, 0], [3, 0.173333, 0]], [0.130432, [3, -0.173333, 0], [3, 0.2, 0]], [0.130432, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.700996, [3, -0.0133333, 0], [3, 0.08, 0]], [0.700996, [3, -0.08, 0], [3, 0.106667, 0]], [0.690258, [3, -0.106667, 0], [3, 0.133333, 0]], [0.690258, [3, -0.133333, 0], [3, 0.16, 0]], [0.690258, [3, -0.16, 0], [3, 0.133333, 0]], [0.690258, [3, -0.133333, 0], [3, 0.173333, 0]], [0.690258, [3, -0.173333, 0], [3, 0.2, 0]], [0.690258, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.2892, [3, -0.0133333, 0], [3, 0.08, 0]], [0.2892, [3, -0.08, 0], [3, 0.106667, 0]], [0.2892, [3, -0.106667, 0], [3, 0.133333, 0]], [0.2892, [3, -0.133333, 0], [3, 0.16, 0]], [0.2892, [3, -0.16, 0], [3, 0.133333, 0]], [0.2892, [3, -0.133333, 0], [3, 0.173333, 0]], [0.2892, [3, -0.173333, 0], [3, 0.2, 0]], [0.2892, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[1.22724, [3, -0.0133333, 0], [3, 0.08, 0]], [1.22724, [3, -0.08, 0], [3, 0.106667, 0]], [1.22724, [3, -0.106667, 0], [3, 0.133333, 0]], [1.22724, [3, -0.133333, 0], [3, 0.16, 0]], [1.22724, [3, -0.16, 0], [3, 0.133333, 0]], [1.22724, [3, -0.133333, 0], [3, 0.173333, 0]], [1.22724, [3, -0.173333, 0], [3, 0.2, 0]], [1.22724, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.00455999, [3, -0.0133333, 0], [3, 0.08, 0]], [0.00455999, [3, -0.08, 0], [3, 0.106667, 0]], [-0.04913, [3, -0.106667, 0.0109084], [3, 0.133333, -0.0136356]], [-0.069072, [3, -0.133333, 0.00464848], [3, 0.16, -0.00557817]], [-0.0798099, [3, -0.16, 0], [3, 0.133333, 0]], [-0.0798099, [3, -0.133333, 0], [3, 0.173333, 0]], [-0.0798099, [3, -0.173333, 0], [3, 0.2, 0]], [-0.0798099, [3, -0.2, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.04, 0.28, 0.6, 1, 1.48, 1.88, 2.4, 3])
keys.append([[0.026036, [3, -0.0133333, 0], [3, 0.08, 0]], [0.026036, [3, -0.08, 0], [3, 0.106667, 0]], [0.026036, [3, -0.106667, 0], [3, 0.133333, 0]], [0.0367742, [3, -0.133333, 0], [3, 0.16, 0]], [0.0367742, [3, -0.16, 0], [3, 0.133333, 0]], [0.0367742, [3, -0.133333, 0], [3, 0.173333, 0]], [0.0367742, [3, -0.173333, 0], [3, 0.2, 0]], [0.0367742, [3, -0.2, 0], [3, 0, 0]]])

for i in range(len(times[0])):
   moves['calibration'+str(i)] = {'times':[], 'keys':[]}
   moves['calibration'+str(i)]['names'] = names
   moves['calibration'+str(i)]['timeout'] = 1
   for j in range(len(names)):
      moves['calibration'+str(i)]['times'].append([1.04])
      moves['calibration'+str(i)]['keys'].append([keys[j][i]])
      
print(moves)